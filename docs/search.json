[
  {
    "objectID": "pages/combining.html",
    "href": "pages/combining.html",
    "title": "Combining Excel and Delimited Data",
    "section": "",
    "text": "library(tidyverse)\n\nWarning: package 'tidyverse' was built under R version 4.4.3\n\n\nWarning: package 'ggplot2' was built under R version 4.4.3\n\n\nWarning: package 'tibble' was built under R version 4.4.3\n\n\nWarning: package 'tidyr' was built under R version 4.4.3\n\n\nWarning: package 'readr' was built under R version 4.4.3\n\n\nWarning: package 'purrr' was built under R version 4.4.3\n\n\nWarning: package 'dplyr' was built under R version 4.4.3\n\n\nWarning: package 'stringr' was built under R version 4.4.3\n\n\nWarning: package 'forcats' was built under R version 4.4.3\n\n\nWarning: package 'lubridate' was built under R version 4.4.3\n\n\n── Attaching core tidyverse packages ──────────────────────── tidyverse 2.0.0 ──\n✔ dplyr     1.1.4     ✔ readr     2.1.5\n✔ forcats   1.0.0     ✔ stringr   1.5.1\n✔ ggplot2   3.5.1     ✔ tibble    3.2.1\n✔ lubridate 1.9.4     ✔ tidyr     1.3.1\n✔ purrr     1.0.4     \n── Conflicts ────────────────────────────────────────── tidyverse_conflicts() ──\n✖ dplyr::filter() masks stats::filter()\n✖ dplyr::lag()    masks stats::lag()\nℹ Use the conflicted package (&lt;http://conflicted.r-lib.org/&gt;) to force all conflicts to become errors\n\nlibrary(readxl)\n\nWarning: package 'readxl' was built under R version 4.4.3",
    "crumbs": [
      "Home",
      "Combining Excel and Delimited Data"
    ]
  },
  {
    "objectID": "pages/concepts.html",
    "href": "pages/concepts.html",
    "title": "Conceptual Questions",
    "section": "",
    "text": "If your working directory is myfolder/homework/, what relative path would you specify to get the file located at myfolder/MyData.csv?\n\n../MyData.csv\n\nThe .. goes up one folder from homework/ to myfolder/, then you reference MyData.csv.\n\nWhat are the major benefits of using R Projects?\n\nKeep code, data, and outputs organized in one self‑contained folder.\n\nThe working directory is set automatically, avoiding hard‑coded paths.\n\nImproves reproducibility and portability (easy to share or move).\n\nPlays nicely with version control tools like git.\n\nWhat is git and what is GitHub?\n\nGit: a distributed version control system that tracks changes, supports branching/merging, and enables collaboration.\n\nGitHub: a cloud platform that hosts git repositories for sharing, collaboration, issues, pull requests, and CI/CD.\n\nWhat are two main differences between a tibble and a data.frame?\n\n(a) Tibbles are stricter/safer: they do not convert strings to factors or change column names/types silently.\n\n(b) Tibbles print nicely: they show the first 10 rows and fit columns to your screen, with data types indicated.\n\nRewrite the following nested function call using Base R’s chaining operator (|&gt;):\nOriginal (nested) call:\narrange(\n  filter(\n    select(as_tibble(iris), starts_with(\"Petal\"), Species), \n    Petal.Length &lt; 1.55\n  ),\n  Species\n)\nUsing the chaining operator with tidyverse verbs:\n\nlibrary(tidyverse)\n\nWarning: package 'tidyverse' was built under R version 4.4.3\n\n\nWarning: package 'ggplot2' was built under R version 4.4.3\n\n\nWarning: package 'tibble' was built under R version 4.4.3\n\n\nWarning: package 'tidyr' was built under R version 4.4.3\n\n\nWarning: package 'readr' was built under R version 4.4.3\n\n\nWarning: package 'purrr' was built under R version 4.4.3\n\n\nWarning: package 'dplyr' was built under R version 4.4.3\n\n\nWarning: package 'stringr' was built under R version 4.4.3\n\n\nWarning: package 'forcats' was built under R version 4.4.3\n\n\nWarning: package 'lubridate' was built under R version 4.4.3\n\n\n── Attaching core tidyverse packages ──────────────────────── tidyverse 2.0.0 ──\n✔ dplyr     1.1.4     ✔ readr     2.1.5\n✔ forcats   1.0.0     ✔ stringr   1.5.1\n✔ ggplot2   3.5.1     ✔ tibble    3.2.1\n✔ lubridate 1.9.4     ✔ tidyr     1.3.1\n✔ purrr     1.0.4     \n── Conflicts ────────────────────────────────────────── tidyverse_conflicts() ──\n✖ dplyr::filter() masks stats::filter()\n✖ dplyr::lag()    masks stats::lag()\nℹ Use the conflicted package (&lt;http://conflicted.r-lib.org/&gt;) to force all conflicts to become errors\n\niris |&gt;\n  as_tibble() |&gt;\n  select(starts_with(\"Petal\"), Species) |&gt;\n  filter(Petal.Length &lt; 1.55) |&gt;\n  arrange(Species)\n\n# A tibble: 37 × 3\n   Petal.Length Petal.Width Species\n          &lt;dbl&gt;       &lt;dbl&gt; &lt;fct&gt;  \n 1          1.4         0.2 setosa \n 2          1.4         0.2 setosa \n 3          1.3         0.2 setosa \n 4          1.5         0.2 setosa \n 5          1.4         0.2 setosa \n 6          1.4         0.3 setosa \n 7          1.5         0.2 setosa \n 8          1.4         0.2 setosa \n 9          1.5         0.1 setosa \n10          1.5         0.2 setosa \n# ℹ 27 more rows",
    "crumbs": [
      "Home",
      "Conceptual Questions"
    ]
  },
  {
    "objectID": "index.html",
    "href": "index.html",
    "title": "Homework 4",
    "section": "",
    "text": "This site hosts and delivers Homework 4 for ST 558 Data Science for Statisticians (R) classes. Use the navigation to access each task and its outputs.\n\nAn example pages site with multiple pages and a table of contents.\nThis could be a landing page for the site. Feel free to put whatever here!",
    "crumbs": [
      "Home",
      "Homework 4"
    ]
  },
  {
    "objectID": "pages/read_delimited.html",
    "href": "pages/read_delimited.html",
    "title": "Reading Delimited Data",
    "section": "",
    "text": "library(tidyverse)\n\nWarning: package 'tidyverse' was built under R version 4.4.3\n\n\nWarning: package 'ggplot2' was built under R version 4.4.3\n\n\nWarning: package 'tibble' was built under R version 4.4.3\n\n\nWarning: package 'tidyr' was built under R version 4.4.3\n\n\nWarning: package 'readr' was built under R version 4.4.3\n\n\nWarning: package 'purrr' was built under R version 4.4.3\n\n\nWarning: package 'dplyr' was built under R version 4.4.3\n\n\nWarning: package 'stringr' was built under R version 4.4.3\n\n\nWarning: package 'forcats' was built under R version 4.4.3\n\n\nWarning: package 'lubridate' was built under R version 4.4.3\n\n\n── Attaching core tidyverse packages ──────────────────────── tidyverse 2.0.0 ──\n✔ dplyr     1.1.4     ✔ readr     2.1.5\n✔ forcats   1.0.0     ✔ stringr   1.5.1\n✔ ggplot2   3.5.1     ✔ tibble    3.2.1\n✔ lubridate 1.9.4     ✔ tidyr     1.3.1\n✔ purrr     1.0.4     \n── Conflicts ────────────────────────────────────────── tidyverse_conflicts() ──\n✖ dplyr::filter() masks stats::filter()\n✖ dplyr::lag()    masks stats::lag()\nℹ Use the conflicted package (&lt;http://conflicted.r-lib.org/&gt;) to force all conflicts to become errors",
    "crumbs": [
      "Home",
      "Reading Delimited Data"
    ]
  },
  {
    "objectID": "pages/concepts.html#task-1-conceptual-questions",
    "href": "pages/concepts.html#task-1-conceptual-questions",
    "title": "Conceptual Questions",
    "section": "Task 1: Conceptual Questions",
    "text": "Task 1: Conceptual Questions\n\nIf your working directory is myfolder/homework/, what relative path would you specify to get the file located at myfolder/MyData.csv?\n\n../MyData.csv\n\nThe .. goes up one folder from homework/ to myfolder/, then you reference MyData.csv.\n\nWhat are the major benefits of using R Projects?\n\nKeep code, data, and outputs organized in one self‑contained folder.\n\nThe working directory is set automatically, avoiding hard‑coded paths.\n\nImproves reproducibility and portability (easy to share or move).\n\nPlays nicely with version control tools like git.\n\nWhat is git and what is GitHub?\n\nGit: a distributed version control system that tracks changes, supports branching/merging, and enables collaboration.\n\nGitHub: a cloud platform that hosts git repositories for sharing, collaboration, issues, pull requests, and CI/CD.\n\nWhat are two main differences between a tibble and a data.frame?\n\n(a) Tibbles are stricter/safer: they do not convert strings to factors or change column names/types silently.\n\n(b) Tibbles print nicely: they show the first 10 rows and fit columns to your screen, with data types indicated.\n\nRewrite the following nested function call using Base R’s chaining operator (|&gt;):\nOriginal (nested) call:\narrange(\n  filter(\n    select(as_tibble(iris), starts_with(\"Petal\"), Species), \n    Petal.Length &lt; 1.55\n  ),\n  Species\n)\nUsing the chaining operator with tidyverse verbs:\n\nlibrary(tidyverse)\n\nWarning: package 'tidyverse' was built under R version 4.4.3\n\n\nWarning: package 'ggplot2' was built under R version 4.4.3\n\n\nWarning: package 'tibble' was built under R version 4.4.3\n\n\nWarning: package 'tidyr' was built under R version 4.4.3\n\n\nWarning: package 'readr' was built under R version 4.4.3\n\n\nWarning: package 'purrr' was built under R version 4.4.3\n\n\nWarning: package 'dplyr' was built under R version 4.4.3\n\n\nWarning: package 'stringr' was built under R version 4.4.3\n\n\nWarning: package 'forcats' was built under R version 4.4.3\n\n\nWarning: package 'lubridate' was built under R version 4.4.3\n\n\n── Attaching core tidyverse packages ──────────────────────── tidyverse 2.0.0 ──\n✔ dplyr     1.1.4     ✔ readr     2.1.5\n✔ forcats   1.0.0     ✔ stringr   1.5.1\n✔ ggplot2   3.5.1     ✔ tibble    3.2.1\n✔ lubridate 1.9.4     ✔ tidyr     1.3.1\n✔ purrr     1.0.4     \n── Conflicts ────────────────────────────────────────── tidyverse_conflicts() ──\n✖ dplyr::filter() masks stats::filter()\n✖ dplyr::lag()    masks stats::lag()\nℹ Use the conflicted package (&lt;http://conflicted.r-lib.org/&gt;) to force all conflicts to become errors\n\niris |&gt;\n  as_tibble() |&gt;\n  select(starts_with(\"Petal\"), Species) |&gt;\n  filter(Petal.Length &lt; 1.55) |&gt;\n  arrange(Species)\n\n# A tibble: 37 × 3\n   Petal.Length Petal.Width Species\n          &lt;dbl&gt;       &lt;dbl&gt; &lt;fct&gt;  \n 1          1.4         0.2 setosa \n 2          1.4         0.2 setosa \n 3          1.3         0.2 setosa \n 4          1.5         0.2 setosa \n 5          1.4         0.2 setosa \n 6          1.4         0.3 setosa \n 7          1.5         0.2 setosa \n 8          1.4         0.2 setosa \n 9          1.5         0.1 setosa \n10          1.5         0.2 setosa \n# ℹ 27 more rows",
    "crumbs": [
      "Home",
      "Conceptual Questions"
    ]
  },
  {
    "objectID": "pages/read_delimited.html#part-a-glass-data",
    "href": "pages/read_delimited.html#part-a-glass-data",
    "title": "Reading Delimited Data",
    "section": "Part A — Glass data",
    "text": "Part A — Glass data\n\nSource: http://www4.stat.ncsu.edu/~online/datasets/glass.data\n\nThe raw file has no header. I will add the names from the description and then tidy the class column.\n\n\nA1) Read from URL and add column names\n\nglass_url &lt;- \"http://www4.stat.ncsu.edu/~online/datasets/glass.data\"\n\nglass_colnames &lt;- c(\n  \"Id\",\"RI\",\"Na\",\"Mg\",\"Al\",\"Si\",\"K\",\"Ca\",\"Ba\",\"Fe\",\"class_id\"\n)\n\n# readr will guess it's comma-delimited; explicitly use read_csv for clarity\nglass &lt;- readr::read_csv(\n  glass_url,\n  col_names = glass_colnames,\n  show_col_types = FALSE\n) |&gt;\n  as_tibble()\n\nglimpse(glass)\n\nRows: 214\nColumns: 11\n$ Id       &lt;dbl&gt; 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18…\n$ RI       &lt;dbl&gt; 1.52101, 1.51761, 1.51618, 1.51766, 1.51742, 1.51596, 1.51743…\n$ Na       &lt;dbl&gt; 13.64, 13.89, 13.53, 13.21, 13.27, 12.79, 13.30, 13.15, 14.04…\n$ Mg       &lt;dbl&gt; 4.49, 3.60, 3.55, 3.69, 3.62, 3.61, 3.60, 3.61, 3.58, 3.60, 3…\n$ Al       &lt;dbl&gt; 1.10, 1.36, 1.54, 1.29, 1.24, 1.62, 1.14, 1.05, 1.37, 1.36, 1…\n$ Si       &lt;dbl&gt; 71.78, 72.73, 72.99, 72.61, 73.08, 72.97, 73.09, 73.24, 72.08…\n$ K        &lt;dbl&gt; 0.06, 0.48, 0.39, 0.57, 0.55, 0.64, 0.58, 0.57, 0.56, 0.57, 0…\n$ Ca       &lt;dbl&gt; 8.75, 7.83, 7.78, 8.22, 8.07, 8.07, 8.17, 8.24, 8.30, 8.40, 8…\n$ Ba       &lt;dbl&gt; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0…\n$ Fe       &lt;dbl&gt; 0.00, 0.00, 0.00, 0.00, 0.00, 0.26, 0.00, 0.00, 0.00, 0.11, 0…\n$ class_id &lt;dbl&gt; 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1…\n\n\n\n\nA2) Give meaningful class labels\n\nUCI mapping (used here):\n1 = building_windows_float_processed (BWFP)\n2 = building_windows_non_float_processed (BWNFP)\n3 = vehicle_windows_float_processed (VWFP)\n4 = vehicle_windows_non_float_processed (not present in this file)\n5 = containers\n6 = tableware\n7 = headlamp\n\n\nclass_labels &lt;- c(\n  \"building_windows_float_processed\",\n  \"building_windows_non_float_processed\",\n  \"vehicle_windows_float_processed\",\n  \"vehicle_windows_non_float_processed\",\n  \"containers\",\n  \"tableware\",\n  \"headlamp\"\n)\n\nglass &lt;- glass |&gt;\n  mutate(\n    class = factor(class_id,\n                   levels = 1:7,\n                   labels = class_labels)\n  )\n\ncount(glass, class)\n\n# A tibble: 6 × 2\n  class                                    n\n  &lt;fct&gt;                                &lt;int&gt;\n1 building_windows_float_processed        70\n2 building_windows_non_float_processed    76\n3 vehicle_windows_float_processed         17\n4 containers                              13\n5 tableware                                9\n6 headlamp                                29\n\n\n\n\nA3) Keep only observations meeting given conditions\n\nExample filter used here (adjust to your assignment’s exact thresholds if needed):\nkeep rows where RI &lt; 1.52 and class is either \"tableware\" or \"headlamp\".\n\n\nglass_filtered &lt;- glass |&gt;\n  filter(RI &lt; 1.52, class %in% c(\"tableware\", \"headlamp\")) |&gt;\n  select(-class_id)\n\nglass_filtered |&gt;\n  arrange(class, RI) |&gt;\n  print(n = 20)\n\n# A tibble: 34 × 11\n      Id    RI    Na    Mg    Al    Si     K    Ca    Ba    Fe class    \n   &lt;dbl&gt; &lt;dbl&gt; &lt;dbl&gt; &lt;dbl&gt; &lt;dbl&gt; &lt;dbl&gt; &lt;dbl&gt; &lt;dbl&gt; &lt;dbl&gt; &lt;dbl&gt; &lt;fct&gt;    \n 1   185  1.51  17.4  0     0.34  75.4  0     6.65  0     0    tableware\n 2   181  1.51  14.4  1.74  1.54  74.6  0     7.59  0     0    tableware\n 3   179  1.52  14.5  2.24  1.62  72.4  0     9.26  0     0    tableware\n 4   180  1.52  14.1  2.19  1.66  72.7  0     9.32  0     0    tableware\n 5   182  1.52  15.0  0.78  1.74  72.5  0     9.95  0     0    tableware\n 6   177  1.52  14    2.39  1.56  72.4  0     9.57  0     0    tableware\n 7   183  1.52  14.2  0     2.09  72.7  0    10.9   0     0    tableware\n 8   178  1.52  13.8  2.41  1.19  72.8  0     9.77  0     0    tableware\n 9   184  1.52  14.6  0     0.56  73.5  0    11.2   0     0    tableware\n10   186  1.51  13.7  3.2   1.81  72.8  1.76  5.43  1.19  0    headlamp \n11   201  1.52  15.2  0     2.25  73.5  0     8.34  0.63  0    headlamp \n12   203  1.52  14.8  0     2.42  73.7  0     8.39  0.56  0    headlamp \n13   199  1.52  14.4  0     2.66  73.1  0.04  9.08  0.64  0    headlamp \n14   196  1.52  14.1  0     2.68  73.4  0.08  9.07  0.61  0.05 headlamp \n15   197  1.52  13.9  0     2.54  73.2  0.14  9.41  0.81  0.01 headlamp \n16   192  1.52  14.8  0     2.38  73.3  0     8.76  0.64  0.09 headlamp \n17   200  1.52  15.0  0     2.51  73.0  0.05  8.83  0.53  0    headlamp \n18   191  1.52  13.9  1.78  1.79  73.1  0     8.67  0.76  0    headlamp \n19   205  1.52  15.0  0     2.27  73.3  0     8.71  0.67  0    headlamp \n20   193  1.52  14.2  0     2.79  73.5  0.04  9.04  0.4   0.09 headlamp \n# ℹ 14 more rows\n\n\n\n\nA4) Quick summaries\n\nglass |&gt;\n  summarise(\n    n = n(),\n    ri_mean = mean(RI, na.rm = TRUE),\n    ri_sd   = sd(RI, na.rm = TRUE),\n    ba_prop_nonzero = mean(Ba &gt; 0, na.rm = TRUE)\n  )\n\n# A tibble: 1 × 4\n      n ri_mean   ri_sd ba_prop_nonzero\n  &lt;int&gt;   &lt;dbl&gt;   &lt;dbl&gt;           &lt;dbl&gt;\n1   214    1.52 0.00304           0.178",
    "crumbs": [
      "Home",
      "Reading Delimited Data"
    ]
  },
  {
    "objectID": "pages/read_delimited.html#part-b-yeast-data",
    "href": "pages/read_delimited.html#part-b-yeast-data",
    "title": "Reading Delimited Data",
    "section": "Part B — Yeast data",
    "text": "Part B — Yeast data\n\nSource: http://www4.stat.ncsu.edu/~online/datasets/yeast.data\n\nThe raw file has no tidy header and is whitespace-delimited. We will supply names and parse accordingly.\n\n\nB1) Read from URL and name columns\n\nVariables used (per UCI description):\nseq_name, mcg, gvh, alm, mit, erl, pox, vac, nuc, class\n\n\nyeast_url &lt;- \"http://www4.stat.ncsu.edu/~online/datasets/yeast.data\"\n\nyeast_colnames &lt;- c(\"seq_name\",\"mcg\",\"gvh\",\"alm\",\"mit\",\"erl\",\"pox\",\"vac\",\"nuc\",\"class\")\n\n# whitespace-delimited; first column is an id-like string\nyeast &lt;- readr::read_table(\n  yeast_url,\n  col_names = yeast_colnames,\n  show_col_types = FALSE\n) |&gt;\n  as_tibble()\n\nglimpse(yeast)\n\nRows: 1,484\nColumns: 10\n$ seq_name &lt;chr&gt; \"ADT1_YEAST\", \"ADT2_YEAST\", \"ADT3_YEAST\", \"AAR2_YEAST\", \"AATM…\n$ mcg      &lt;dbl&gt; 0.58, 0.43, 0.64, 0.58, 0.42, 0.51, 0.50, 0.48, 0.55, 0.40, 0…\n$ gvh      &lt;dbl&gt; 0.61, 0.67, 0.62, 0.44, 0.44, 0.40, 0.54, 0.45, 0.50, 0.39, 0…\n$ alm      &lt;dbl&gt; 0.47, 0.48, 0.49, 0.57, 0.48, 0.56, 0.48, 0.59, 0.66, 0.60, 0…\n$ mit      &lt;dbl&gt; 0.13, 0.27, 0.15, 0.13, 0.54, 0.17, 0.65, 0.20, 0.36, 0.15, 0…\n$ erl      &lt;dbl&gt; 0.5, 0.5, 0.5, 0.5, 0.5, 0.5, 0.5, 0.5, 0.5, 0.5, 0.5, 0.5, 0…\n$ pox      &lt;dbl&gt; 0.0, 0.0, 0.0, 0.0, 0.0, 0.5, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0…\n$ vac      &lt;dbl&gt; 0.48, 0.53, 0.53, 0.54, 0.48, 0.49, 0.53, 0.58, 0.49, 0.58, 0…\n$ nuc      &lt;dbl&gt; 0.22, 0.22, 0.22, 0.22, 0.22, 0.22, 0.22, 0.34, 0.22, 0.30, 0…\n$ class    &lt;chr&gt; \"MIT\", \"MIT\", \"MIT\", \"NUC\", \"MIT\", \"CYT\", \"MIT\", \"NUC\", \"MIT\"…\n\n\n\n\nB2) Clean the seq_name and class columns\n\nKeep seq_name as an identifier (character).\n\nMake class a factor.\n\n\nyeast &lt;- yeast |&gt;\n  mutate(\n    seq_name = as.character(seq_name),\n    class = factor(class)\n  )\n\ncount(yeast, class)\n\n# A tibble: 10 × 2\n   class     n\n   &lt;fct&gt; &lt;int&gt;\n 1 CYT     463\n 2 ERL       5\n 3 EXC      35\n 4 ME1      44\n 5 ME2      51\n 6 ME3     163\n 7 MIT     244\n 8 NUC     429\n 9 POX      20\n10 VAC      30\n\n\n\n\nB3) For each numeric column, compute mean and median\n\nUse across() with where(is.numeric) to apply functions to the numeric features.\n\n\nyeast_summary &lt;- yeast |&gt;\n  summarise(\n    across(where(is.numeric), list(mean = ~mean(.x, na.rm = TRUE),\n                                   median = ~median(.x, na.rm = TRUE)))\n  )\n\nyeast_summary\n\n# A tibble: 1 × 16\n  mcg_mean mcg_median gvh_mean gvh_median alm_mean alm_median mit_mean\n     &lt;dbl&gt;      &lt;dbl&gt;    &lt;dbl&gt;      &lt;dbl&gt;    &lt;dbl&gt;      &lt;dbl&gt;    &lt;dbl&gt;\n1    0.500       0.49    0.500       0.49    0.500       0.51    0.261\n# ℹ 9 more variables: mit_median &lt;dbl&gt;, erl_mean &lt;dbl&gt;, erl_median &lt;dbl&gt;,\n#   pox_mean &lt;dbl&gt;, pox_median &lt;dbl&gt;, vac_mean &lt;dbl&gt;, vac_median &lt;dbl&gt;,\n#   nuc_mean &lt;dbl&gt;, nuc_median &lt;dbl&gt;\n\n\nIf you prefer a long summary table (feature × stat × value):\n\nyeast_summary_long &lt;- yeast |&gt;\n  summarise(\n    across(where(is.numeric),\n           list(mean = ~mean(.x, na.rm = TRUE),\n                median = ~median(.x, na.rm = TRUE)))\n  ) |&gt;\n  pivot_longer(everything(),\n               names_to = c(\"feature\",\"stat\"),\n               names_sep = \"_(?=[^_]+$)\",\n               values_to = \"value\")\n\nyeast_summary_long |&gt;\n  arrange(feature, stat) |&gt;\n  print(n = 30)\n\n# A tibble: 16 × 3\n   feature stat    value\n   &lt;chr&gt;   &lt;chr&gt;   &lt;dbl&gt;\n 1 alm     mean   0.500 \n 2 alm     median 0.51  \n 3 erl     mean   0.505 \n 4 erl     median 0.5   \n 5 gvh     mean   0.500 \n 6 gvh     median 0.49  \n 7 mcg     mean   0.500 \n 8 mcg     median 0.49  \n 9 mit     mean   0.261 \n10 mit     median 0.22  \n11 nuc     mean   0.276 \n12 nuc     median 0.22  \n13 pox     mean   0.0075\n14 pox     median 0     \n15 vac     mean   0.500 \n16 vac     median 0.51  \n\n\n\n\nClass-wise summaries\n\nyeast |&gt;\n  group_by(class) |&gt;\n  summarise(\n    across(where(is.numeric),\n           list(mean = ~mean(.x, na.rm = TRUE),\n                median = ~median(.x, na.rm = TRUE))),\n    .groups = \"drop\"\n  )\n\n# A tibble: 10 × 17\n   class mcg_mean mcg_median gvh_mean gvh_median alm_mean alm_median mit_mean\n   &lt;fct&gt;    &lt;dbl&gt;      &lt;dbl&gt;    &lt;dbl&gt;      &lt;dbl&gt;    &lt;dbl&gt;      &lt;dbl&gt;    &lt;dbl&gt;\n 1 CYT      0.481       0.48    0.470      0.46     0.535      0.53     0.227\n 2 ERL      0.792       0.78    0.772      0.8      0.482      0.5      0.336\n 3 EXC      0.735       0.77    0.717      0.73     0.493      0.49     0.292\n 4 ME1      0.789       0.78    0.757      0.73     0.376      0.365    0.312\n 5 ME2      0.722       0.76    0.603      0.59     0.415      0.41     0.283\n 6 ME3      0.431       0.43    0.490      0.49     0.364      0.36     0.213\n 7 MIT      0.521       0.51    0.533      0.53     0.517      0.52     0.404\n 8 NUC      0.452       0.45    0.456      0.46     0.529      0.53     0.228\n 9 POX      0.521       0.48    0.508      0.505    0.506      0.51     0.248\n10 VAC      0.548       0.56    0.526      0.505    0.465      0.495    0.201\n# ℹ 9 more variables: mit_median &lt;dbl&gt;, erl_mean &lt;dbl&gt;, erl_median &lt;dbl&gt;,\n#   pox_mean &lt;dbl&gt;, pox_median &lt;dbl&gt;, vac_mean &lt;dbl&gt;, vac_median &lt;dbl&gt;,\n#   nuc_mean &lt;dbl&gt;, nuc_median &lt;dbl&gt;",
    "crumbs": [
      "Home",
      "Reading Delimited Data"
    ]
  },
  {
    "objectID": "pages/combining.html#white-wine-excel",
    "href": "pages/combining.html#white-wine-excel",
    "title": "Combining Excel and Delimited Data",
    "section": "1) White wine (Excel)",
    "text": "1) White wine (Excel)\nThe assignment asks you to download the Excel file locally. To make this file self‑contained, the chunk below will download it automatically to a data/ folder if it isn’t already present.\n\n# Paths and URLs\ndata_dir &lt;- \"data\"\ndir.create(data_dir, showWarnings = FALSE, recursive = TRUE)\n\nwhite_xlsx_url  &lt;- \"https://www4.stat.ncsu.edu/~online/datasets/white-wine.xlsx\"\nwhite_xlsx_path &lt;- file.path(data_dir, \"white-wine.xlsx\")\n\nif (!file.exists(white_xlsx_path)) {\n  download.file(white_xlsx_url, destfile = white_xlsx_path, mode = \"wb\")\n}\nwhite_xlsx_path\n\n[1] \"data/white-wine.xlsx\"\n\n\n\n1a) Import the first sheet and print the tibble\n\nwhite_wine &lt;- read_excel(white_xlsx_path, sheet = 1)\nwhite_wine\n\n# A tibble: 4,898 × 12\n   `fixed acidity` `volatile acidity` `citric acid` `residual sugar` chlorides\n             &lt;dbl&gt;              &lt;dbl&gt;         &lt;dbl&gt;            &lt;dbl&gt;     &lt;dbl&gt;\n 1               7               0.27          0.36             20.7     0.045\n 2              63               0.3           0.34              1.6     0.049\n 3              81               0.28          0.4               6.9     0.05 \n 4              72               0.23          0.32              8.5     0.058\n 5              72               0.23          0.32              8.5     0.058\n 6              81               0.28          0.4               6.9     0.05 \n 7              62               0.32          0.16              7       0.045\n 8               7               0.27          0.36             20.7     0.045\n 9              63               0.3           0.34              1.6     0.049\n10              81               0.22          0.43              1.5     0.044\n# ℹ 4,888 more rows\n# ℹ 7 more variables: `free sulfur dioxide` &lt;dbl&gt;,\n#   `total sulfur dioxide` &lt;dbl&gt;, density &lt;dbl&gt;, pH &lt;dbl&gt;, sulphates &lt;dbl&gt;,\n#   alcohol &lt;dbl&gt;, quality &lt;dbl&gt;\n\n\n\nYou may notice some names are shown with backticks (spaces in names). We’ll replace them using the alternative names provided in sheet 2.\n\n\n\n1b) Read sheet 2 (alternative variable names) and overwrite the column names\n\nalt_names &lt;- read_excel(white_xlsx_path, sheet = 2, col_names = TRUE) |&gt; \n  dplyr::pull(1) |&gt; \n  as.character()\n\n# make sure lengths match\nstopifnot(length(alt_names) == ncol(white_wine))\n\ncolnames(white_wine) &lt;- alt_names\n\n# Add a 'type' column\nwhite_wine &lt;- white_wine |&gt; mutate(type = \"white\")\n\nglimpse(white_wine)\n\nRows: 4,898\nColumns: 13\n$ fixed_acidity        &lt;dbl&gt; 7, 63, 81, 72, 72, 81, 62, 7, 63, 81, 81, 86, 79,…\n$ volatile_acidity     &lt;dbl&gt; 0.27, 0.30, 0.28, 0.23, 0.23, 0.28, 0.32, 0.27, 0…\n$ citric_acid          &lt;dbl&gt; 0.36, 0.34, 0.40, 0.32, 0.32, 0.40, 0.16, 0.36, 0…\n$ residual_sugar       &lt;dbl&gt; 20.70, 1.60, 6.90, 8.50, 8.50, 6.90, 7.00, 20.70,…\n$ chlorides            &lt;dbl&gt; 0.045, 0.049, 0.050, 0.058, 0.058, 0.050, 0.045, …\n$ free_sulfur_dioxide  &lt;dbl&gt; 45, 14, 30, 47, 47, 30, 30, 45, 14, 28, 11, 17, 1…\n$ total_sulfur_dioxide &lt;dbl&gt; 170, 132, 97, 186, 186, 97, 136, 170, 132, 129, 6…\n$ density              &lt;dbl&gt; 1.0010, 0.9940, 0.9951, 0.9956, 0.9956, 0.9951, 0…\n$ pH                   &lt;dbl&gt; 3, 33, 326, 319, 319, 326, 318, 3, 33, 322, 299, …\n$ sulphates            &lt;dbl&gt; 0.45, 0.49, 0.44, 0.40, 0.40, 0.44, 0.47, 0.45, 0…\n$ alcohol              &lt;dbl&gt; 88, 95, 101, 99, 99, 101, 96, 88, 95, 11, 12, 97,…\n$ quality              &lt;dbl&gt; 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 5, 5, 5, 7, 5, 7, 6…\n$ type                 &lt;chr&gt; \"white\", \"white\", \"white\", \"white\", \"white\", \"whi…",
    "crumbs": [
      "Home",
      "Combining Excel and Delimited Data"
    ]
  },
  {
    "objectID": "pages/combining.html#red-wine-semicolon-delimited",
    "href": "pages/combining.html#red-wine-semicolon-delimited",
    "title": "Combining Excel and Delimited Data",
    "section": "2) Red wine (semi‑colon delimited)",
    "text": "2) Red wine (semi‑colon delimited)\nSource given by the assignment:\n\nhttps://www4.stat.ncsu.edu/~online/datasets/red-wine.csv\n\n\nred_url &lt;- \"https://www4.stat.ncsu.edu/~online/datasets/red-wine.csv\"\n\n# Semi-colon delimited file\nred_wine &lt;- readr::read_delim(\n  red_url,\n  delim = \";\",\n  show_col_types = FALSE\n)\n\n# Use the same variable names as the white wine set (excluding 'type', which we add below)\n# Assumes both files have the same columns in the same order.\ncolnames(red_wine) &lt;- alt_names\n\nred_wine &lt;- red_wine |&gt; mutate(type = \"red\")\n\nglimpse(red_wine)\n\nRows: 1,599\nColumns: 13\n$ fixed_acidity        &lt;dbl&gt; 7.4, 7.8, 7.8, 11.2, 7.4, 7.4, 7.9, 7.3, 7.8, 7.5…\n$ volatile_acidity     &lt;dbl&gt; 0.700, 0.880, 0.760, 0.280, 0.700, 0.660, 0.600, …\n$ citric_acid          &lt;dbl&gt; 0.00, 0.00, 0.04, 0.56, 0.00, 0.00, 0.06, 0.00, 0…\n$ residual_sugar       &lt;dbl&gt; 1.9, 2.6, 2.3, 1.9, 1.9, 1.8, 1.6, 1.2, 2.0, 6.1,…\n$ chlorides            &lt;dbl&gt; 0.076, 0.098, 0.092, 0.075, 0.076, 0.075, 0.069, …\n$ free_sulfur_dioxide  &lt;dbl&gt; 11, 25, 15, 17, 11, 13, 15, 15, 9, 17, 15, 17, 16…\n$ total_sulfur_dioxide &lt;dbl&gt; 34, 67, 54, 60, 34, 40, 59, 21, 18, 102, 65, 102,…\n$ density              &lt;dbl&gt; 0.9978, 0.9968, 0.9970, 0.9980, 0.9978, 0.9978, 0…\n$ pH                   &lt;dbl&gt; 3.51, 3.20, 3.26, 3.16, 3.51, 3.51, 3.30, 3.39, 3…\n$ sulphates            &lt;dbl&gt; 0.56, 0.68, 0.65, 0.58, 0.56, 0.56, 0.46, 0.47, 0…\n$ alcohol              &lt;dbl&gt; 9.4, 9.8, 9.8, 9.8, 9.4, 9.4, 9.4, 10.0, 9.5, 10.…\n$ quality              &lt;dbl&gt; 5, 5, 5, 6, 5, 5, 5, 7, 7, 5, 5, 5, 5, 5, 5, 5, 7…\n$ type                 &lt;chr&gt; \"red\", \"red\", \"red\", \"red\", \"red\", \"red\", \"red\", …",
    "crumbs": [
      "Home",
      "Combining Excel and Delimited Data"
    ]
  },
  {
    "objectID": "pages/combining.html#combine-the-two-data-sets",
    "href": "pages/combining.html#combine-the-two-data-sets",
    "title": "Combining Excel and Delimited Data",
    "section": "3) Combine the two data sets",
    "text": "3) Combine the two data sets\nUse dplyr::bind_rows() to stack them.\n\nwine &lt;- dplyr::bind_rows(white_wine, red_wine) |&gt; as_tibble()\nwine\n\n# A tibble: 6,497 × 13\n   fixed_acidity volatile_acidity citric_acid residual_sugar chlorides\n           &lt;dbl&gt;            &lt;dbl&gt;       &lt;dbl&gt;          &lt;dbl&gt;     &lt;dbl&gt;\n 1             7             0.27        0.36           20.7     0.045\n 2            63             0.3         0.34            1.6     0.049\n 3            81             0.28        0.4             6.9     0.05 \n 4            72             0.23        0.32            8.5     0.058\n 5            72             0.23        0.32            8.5     0.058\n 6            81             0.28        0.4             6.9     0.05 \n 7            62             0.32        0.16            7       0.045\n 8             7             0.27        0.36           20.7     0.045\n 9            63             0.3         0.34            1.6     0.049\n10            81             0.22        0.43            1.5     0.044\n# ℹ 6,487 more rows\n# ℹ 8 more variables: free_sulfur_dioxide &lt;dbl&gt;, total_sulfur_dioxide &lt;dbl&gt;,\n#   density &lt;dbl&gt;, pH &lt;dbl&gt;, sulphates &lt;dbl&gt;, alcohol &lt;dbl&gt;, quality &lt;dbl&gt;,\n#   type &lt;chr&gt;",
    "crumbs": [
      "Home",
      "Combining Excel and Delimited Data"
    ]
  },
  {
    "objectID": "pages/combining.html#filter-high-quality-and-reasonable-alcohol",
    "href": "pages/combining.html#filter-high-quality-and-reasonable-alcohol",
    "title": "Combining Excel and Delimited Data",
    "section": "4) Filter: high quality and reasonable alcohol",
    "text": "4) Filter: high quality and reasonable alcohol\nThe assignment asks to keep high‑quality wines and those with a reasonable alcohol value.\nSet the thresholds below; adjust if your instructor specified slightly different cutoffs.\n\nquality_threshold &lt;- 6.5\nalcohol_upper     &lt;- 13.2   # if your spec says 13, set to 13\n\nwine_filtered &lt;- wine |&gt;\n  filter(quality &gt; quality_threshold, alcohol &lt; alcohol_upper) |&gt;\n  arrange(desc(quality))\n\nwine_filtered\n\n# A tibble: 365 × 13\n   fixed_acidity volatile_acidity citric_acid residual_sugar chlorides\n           &lt;dbl&gt;            &lt;dbl&gt;       &lt;dbl&gt;          &lt;dbl&gt;     &lt;dbl&gt;\n 1            62             0.24        0.29          13.3      0.039\n 2            73             0.21        0.29           1.6      0.034\n 3            73             0.21        0.29           1.6      0.034\n 4            53             0.24        0.33           1.3      0.033\n 5            68             0.35        0.32           2.4      0.048\n 6            64             0.15        0.36           1.8      0.034\n 7            64             0.15        0.36           1.8      0.034\n 8            68             0.46        0.26           2.7      0.042\n 9            65             0.44        0.47           5.45     0.014\n10            55             0.34        0.26           2.2      0.021\n# ℹ 355 more rows\n# ℹ 8 more variables: free_sulfur_dioxide &lt;dbl&gt;, total_sulfur_dioxide &lt;dbl&gt;,\n#   density &lt;dbl&gt;, pH &lt;dbl&gt;, sulphates &lt;dbl&gt;, alcohol &lt;dbl&gt;, quality &lt;dbl&gt;,\n#   type &lt;chr&gt;",
    "crumbs": [
      "Home",
      "Combining Excel and Delimited Data"
    ]
  },
  {
    "objectID": "pages/combining.html#select-columns-those-containing-acid-plus-alcohol-type-and-quality",
    "href": "pages/combining.html#select-columns-those-containing-acid-plus-alcohol-type-and-quality",
    "title": "Combining Excel and Delimited Data",
    "section": "5) Select columns: those containing \"acid\", plus alcohol, type, and quality",
    "text": "5) Select columns: those containing \"acid\", plus alcohol, type, and quality\n\nwine_selected &lt;- wine_filtered |&gt;\n  select(contains(\"acid\"), alcohol, type, quality)\n\nwine_selected\n\n# A tibble: 365 × 6\n   fixed_acidity volatile_acidity citric_acid alcohol type  quality\n           &lt;dbl&gt;            &lt;dbl&gt;       &lt;dbl&gt;   &lt;dbl&gt; &lt;chr&gt;   &lt;dbl&gt;\n 1            62             0.24        0.29      11 white       8\n 2            73             0.21        0.29      11 white       8\n 3            73             0.21        0.29      11 white       8\n 4            53             0.24        0.33      11 white       8\n 5            68             0.35        0.32      12 white       8\n 6            64             0.15        0.36      11 white       8\n 7            64             0.15        0.36      11 white       8\n 8            68             0.46        0.26      12 white       8\n 9            65             0.44        0.47      13 white       8\n10            55             0.34        0.26      13 white       8\n# ℹ 355 more rows",
    "crumbs": [
      "Home",
      "Combining Excel and Delimited Data"
    ]
  },
  {
    "objectID": "pages/combining.html#add-mean-and-standard-deviation-of-alcohol-for-each-quality-level",
    "href": "pages/combining.html#add-mean-and-standard-deviation-of-alcohol-for-each-quality-level",
    "title": "Combining Excel and Delimited Data",
    "section": "6) Add mean and standard deviation of alcohol for each quality level",
    "text": "6) Add mean and standard deviation of alcohol for each quality level\n\nUse group_by(quality) and mutate() so the per‑quality stats are added to every row of that group.\n\n\nwine_with_stats &lt;- wine_selected |&gt;\n  group_by(quality) |&gt;\n  mutate(\n    alcohol_mean = mean(alcohol, na.rm = TRUE),\n    alcohol_sd   = sd(alcohol, na.rm = TRUE)\n  ) |&gt;\n  ungroup()\n\nwine_with_stats\n\n# A tibble: 365 × 8\n   fixed_acidity volatile_acidity citric_acid alcohol type  quality alcohol_mean\n           &lt;dbl&gt;            &lt;dbl&gt;       &lt;dbl&gt;   &lt;dbl&gt; &lt;chr&gt;   &lt;dbl&gt;        &lt;dbl&gt;\n 1            62             0.24        0.29      11 white       8         11.9\n 2            73             0.21        0.29      11 white       8         11.9\n 3            73             0.21        0.29      11 white       8         11.9\n 4            53             0.24        0.33      11 white       8         11.9\n 5            68             0.35        0.32      12 white       8         11.9\n 6            64             0.15        0.36      11 white       8         11.9\n 7            64             0.15        0.36      11 white       8         11.9\n 8            68             0.46        0.26      12 white       8         11.9\n 9            65             0.44        0.47      13 white       8         11.9\n10            55             0.34        0.26      13 white       8         11.9\n# ℹ 355 more rows\n# ℹ 1 more variable: alcohol_sd &lt;dbl&gt;\n\n\n\nCompact summary table instead of row-wise stats\n\nquality_alcohol_summary &lt;- wine_selected |&gt;\n  group_by(quality) |&gt;\n  summarise(\n    n            = n(),\n    alcohol_mean = mean(alcohol, na.rm = TRUE),\n    alcohol_sd   = sd(alcohol, na.rm = TRUE),\n    .groups = \"drop\"\n  )\n\nquality_alcohol_summary\n\n# A tibble: 2 × 4\n  quality     n alcohol_mean alcohol_sd\n    &lt;dbl&gt; &lt;int&gt;        &lt;dbl&gt;      &lt;dbl&gt;\n1       7   332         11.2      1.10 \n2       8    33         11.9      0.935",
    "crumbs": [
      "Home",
      "Combining Excel and Delimited Data"
    ]
  }
]